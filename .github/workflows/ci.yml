name: CI Pipeline

on:
  push:
    branches:
      # Se ejecuta en pushes a ramas que tienen PR abiertos
      - '**'
    paths:
      # Solo se ejecuta si hay cambios en el backend
      - 'backend/**'
      - '.github/workflows/**'

# Establecer permisos mínimos necesarios siguiendo el principio de menor privilegio
permissions:
  contents: read
  checks: write

jobs:
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest

    # Prevenir ejecuciones concurrentes en el mismo PR/branch
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch solo el commit necesario para optimizar
          fetch-depth: 1
          # Verificar la firma del commit por seguridad
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'  # Especificamos la ruta al package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: |
          npm ci
        env:
          # Reduce el output de npm para logs más limpios
          npm_config_loglevel: error

      - name: Run tests
        working-directory: ./backend
        run: npm test
        env:
          # Variables de entorno para tests si son necesarias
          NODE_ENV: test

      - name: Build backend
        working-directory: ./backend
        run: npm run build
        env:
          # Variables de entorno para build si son necesarias
          NODE_ENV: production

      # Guardar los artifacts de build para posible uso posterior
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/dist/
          retention-days: 7